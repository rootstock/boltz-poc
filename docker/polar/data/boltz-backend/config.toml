# Initial config based on boton deployment (should be reproducible, for same RSKJ pvt key)
# contents copied over initially from docs/regtest

# This is the REST API that should be exposed to the public
# It does not support HTTPS but only plaintext HTTP. A reverse
# proxy should be setup with a web server like Nginx
[api]
host = "0.0.0.0"
#port = 9_001

# And this the gRPC API that is used by the boltz-cli executable
#[grpc]
#host = "127.0.0.1"
#port = 9_000
#certpath = "/home/boltz/.boltz/tls.cert"
#keypath = "/home/boltz/.boltz/tls.key"


[[pairs]]
base = "BTC"
quote = "rBTC"
rate = 1
fee = 0.5
timeoutDelta = 1_440

[[pairs]]
base = "BTC"
quote = "DOC"
#rate = 20000
fee = 5
timeoutDelta = 180

[[currencies]]
symbol = "BTC"
network = "bitcoinRegtest"
minWalletBalance = 10_000_000
minChannelBalance = 10_000_000
maxSwapAmount = 4_294_967
minSwapAmount = 1
maxZeroConfAmount = 10_000_000

  [currencies.chain]
  host = "host.docker.internal"
  port = 18_445
  cookie = "/boltz-backend/nodes/btc/.bitcoin-cookie"
  rpcuser = "polaruser"
  rpcpass = "polarpass"
  zmqpubrawblock = "tcp://host.docker.internal:28334"
  zmqpubrawtx = "tcp://host.docker.internal:29335"

  [currencies.lnd]
  host = "host.docker.internal"
  port = 10_001
  certpath = "/boltz-backend/nodes/lnd/certificates/tls.cert"
  macaroonpath = "/boltz-backend/nodes/lnd/macaroons/admin.macaroon"


[ethereum]
providerEndpoint = "http://host.docker.internal:4444"

# these addresses are from initial boton deployment
etherSwapAddress = "0xE0825f57Dd05Ef62FF731c27222A86E104CC4Cad"
erc20SwapAddress = "0x83C5541A6c8D2dBAD642f385d8d06Ca9B6C731ee"

  [[ethereum.tokens]]
  symbol = "rBTC"

  maxSwapAmount = 4_294_96700
  minSwapAmount = 1

  # todo(shree) switch this to DOC (using testERC20 not DummyDocMint)
  # for regtest mode, use address of ERC20 token address (boton)
  [[ethereum.tokens]]
  symbol = "DOC"
  decimals = 18
  contractAddress = "0xDA7Ce79725418F4F6E13Bf5F520C89Cec5f6A974"

  maxSwapAmount = 4_294_96700000
  minSwapAmount = 10000


